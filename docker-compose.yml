version: "3"

services:
  swag:
    image: lscr.io/linuxserver/swag
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - URL=elevated.bnorm.dev
      - VALIDATION=http
    volumes:
      - ./data/config:/config
    ports:
      - "443:443"
      - "80:80"

  service:
    image: ghcr.io/bnorm/elevated-service:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb/test

  mongodb:
    image: mongo:5.0
    restart: unless-stopped
    ports:
      - "27017:27017"

#  zoo:
#    image: confluentinc/cp-zookeeper:7.0.1
#    restart: unless-stopped
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_SERVER_ID: 1
#      ZOOKEEPER_SERVERS: zoo:2888:3888
#
#  kafka:
#    image: confluentinc/cp-kafka:7.0.1
#    restart: unless-stopped
#    ports:
#      - "9092:9092"
#      - "9999:9999"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_JMX_PORT: 9999
#      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
#      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
#      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
#    depends_on:
#      - zoo
